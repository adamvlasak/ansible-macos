---
- name: setup mac
  hosts: all
  vars_files:
    - vars.yml
  tasks:
    # homebrew
    - block:
        - name: install homebrew packages
          homebrew:
            name: "{{ homebrew.packages }}"
            state: present

        - name: install homebrew cask packages
          homebrew_cask:
            name: "{{ homebrew.cask_packages }}"
            state: present
    # user
    - block:
        - name: provision dotfiles
          template:
            src: "{{ item }}.j2"
            dest: "{{ lookup('env','HOME') }}/.{{ item }}"
          loop:
            - zshrc
            - gitconfig

        - name: prepare directories
          file:
            path: "{{ item }}"
            state: directory
          loop:
            - "{{ lookup('env','HOME') }}/.config/alacritty"
            - "{{ lookup('env','HOME') }}/.local/share/mc/skins"
            - "{{ lookup('env','HOME') }}/.tmux/plugins"

        # mc
        - name: download dracula theme for mc
          get_url:
            url: https://raw.githubusercontent.com/dracula/midnight-commander/master/skins/dracula256.ini
            dest: "{{ lookup('env','HOME') }}/.local/share/mc/skins/dracula256.ini"

        # alacritty
        - name: download dracula theme for alacritty
          get_url:
            url: https://raw.githubusercontent.com/dracula/alacritty/master/dracula.yml
            dest: "{{ lookup('env','HOME') }}/.config/alacritty/dracula.yml"

        - name: setup alacritty config
          template:
            src: alacritty.yml.j2
            dest: "{{ lookup('env','HOME') }}/.config/alacritty/alacritty.yml"

        # tmux
        - name: download tmux plugin manager
          git:
            repo: https://github.com/tmux-plugins/tpm
            dest: "{{ lookup('env','HOME') }}/.tmux/plugins/tpm"
            clone: yes
            update: yes

        - name: setup tmux config
          template:
            src: tmux.conf.j2
            dest: "{{ lookup('env','HOME') }}/.tmux.conf"

        # vim
        - name: prepare vimplug directories
          file:
            path: "{{ lookup('env','HOME') }}/.vim/autoload"
            state: directory
            recurse: True

        - name: install vim-plug
          get_url:
            url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
            dest: "{{ lookup('env','HOME') }}/.vim/autoload/plug.vim"
          when: not ansible_check_mode

        - name: provision .vimrc
          template:
            src: vimrc.j2
            dest: "{{ lookup('env','HOME') }}/.vimrc"

        # others
        - name: set font smoothing
          community.general.osx_defaults:
            key: AppleFontSmoothing
            host: currentHost
            type: int
            value: "{{ font_smoothing }}"
            state: present

        - name: enable vs code key repeat
          community.general.osx_defaults:
            domain: com.microsoft.VSCode
            key: ApplePressAndHoldEnabled
            type: bool
            value: false
            state: present

      become_user: "{{ user.login }}"
      become: True
      tags:
        - user

    # renoise
    - block:
        - name: copy FiraCode font file to Renoise app directory
          copy:
            src: FiraCode-Retina.ttf
            dest: /Applications/Renoise.app/Contents/Resources/Skin/Fonts/FiraCode-Retina.ttf

        - name: change Config.xml to use our FiraCode font
          template:
            src: "{{ item }}.j2"
            dest: "/Applications/Renoise.app/Contents/Resources/Skin/Fonts/{{ item }}"
          loop:
            - Config.xml
            - PatternConfig.xml

      become_user: "{{ user.login }}"
      become: True
      tags:
        - renoise
