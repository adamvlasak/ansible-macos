---
- name: Configure MacOS
  hosts: all
  vars_files:
    - vars.yml
  vars:
    renoise_font: FiraCode-Regular.ttf
    user_home: "{{ lookup('env', 'HOME') }}"
  tasks:
    - name: Homebrew
      become_user: "{{ user.login }}"
      become: true
      tags:
        - homebrew
      block:
        - name: Install homebrew packages
          community.general.homebrew:
            name: "{{ homebrew.packages }}"
            state: present

        - name: Install homebrew cask packages
          community.general.homebrew_cask:
            name: "{{ homebrew.cask_packages }}"
            state: present

    - name: User
      become_user: "{{ user.login }}"
      become: true
      tags:
        - user
      block:
        - name: Prepare directories
          ansible.builtin.file:
            path: "{{ item }}"
            state: directory
            owner: "{{ user.login }}"
            group: "{{ user.group }}"
            mode: 0700
          loop:
            - "{{ user_home }}/.vim"
            - "{{ user_home }}/.vim/autoload"
            - "{{ user_home }}/.vim/plugged"

        - name: Install vim-plug
          ansible.builtin.get_url:
            url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
            dest: "{{ user_home }}/.vim/autoload/plug.vim"
            owner: "{{ user.login }}"
            group: "{{ user.group }}"
            mode: 0600
          when: not ansible_check_mode

        - name: Configure dotfiles
          ansible.builtin.template:
            src: "{{ item }}.j2"
            dest: "{{ user_home }}/.{{ item }}"
            owner: "{{ user.login }}"
            group: "{{ user.group }}"
            mode: 0600
          loop:
            - zshrc
            - gitconfig
            - tmux.conf
            - vimrc

        # mc
        - name: Configure mc
          ansible.builtin.template:
            src: mc.ini.j2
            dest: "{{ user_home }}/.config/mc/ini"
            owner: "{{ user.login }}"
            group: "{{ user.group }}"
            mode: 0600

        # osx defaults
        - name: Disable apple press and hold feature
          community.general.osx_defaults:
            domain: NSGlobalDomain
            key: ApplePressAndHoldEnabled
            type: bool
            value: false
            state: present

        - name: Enable fast key repeat
          community.general.osx_defaults:
            domain: NSGlobalDomain
            key: KeyRepeat
            type: int
            value: 2
            state: present

        - name: Enable fast initial key repeat
          community.general.osx_defaults:
            domain: NSGlobalDomain
            key: InitialKeyRepeat
            type: int
            value: 20
            state: present

        - name: Enable vs code key repeat
          community.general.osx_defaults:
            domain: com.microsoft.VSCode
            key: ApplePressAndHoldEnabled
            type: bool
            value: false
            state: present

        # enables Home and End keys in some apps
        - name: Prepare keybinding directory
          ansible.builtin.file:
            path: "{{ user_home }}/Library/KeyBindings"
            state: directory
            owner: "{{ user.login }}"
            group: "{{ user.group }}"
            mode: 0700

        - name: Configure keybinding dict
          ansible.builtin.template:
            src: DefaultKeyBinding.dict.j2
            dest: "{{ user_home }}/Library/KeyBindings/DefaultKeyBinding.dict"
            owner: "{{ user.login }}"
            group: "{{ user.group }}"
            mode: 0600

    - name: System
      become_method: sudo
      become_flags: '-i'
      become_user: root
      become: true
      tags:
        - system
      block:
        - name: Enable TouchID for sudo
          ansible.builtin.lineinfile:
            path: /etc/pam.d/sudo
            line: "auth       sufficient     pam_tid.so"
            search_string: "auth       sufficient     pam_tid.so"
            insertafter: "# sudo: auth account password session"
            state: present

    - name: Renoise
      become_user: "{{ user.login }}"
      become: true
      tags:
        - renoise
      block:
        - name: Copy FiraCode font file to Renoise app directory
          ansible.builtin.copy:
            src: "{{ renoise_font }}"
            dest: "/Applications/Renoise.app/Contents/Resources/Skin/Fonts/{{ renoise_font }}"

        - name: Change Config.xml to use our FiraCode font
          ansible.builtin.template:
            src: "{{ item }}.j2"
            dest: "/Applications/Renoise.app/Contents/Resources/Skin/Fonts/{{ item }}"
          loop:
            - Config.xml
            - PatternConfig.xml
